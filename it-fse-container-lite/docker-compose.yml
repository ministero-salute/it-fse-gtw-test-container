services:
  mongo:
    image: docker.io/mongo:4.2
    ports:
      - '27888:27017'
    volumes:
      - ./mongo/:/docker-entrypoint-initdb.d/:ro
      - ../mongo-dump:/var/lib/mongo/data
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    restart: unless-stopped
  
  kafka:
    image: confluentinc/cp-kafka:6.2.1
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 
    restart: unless-stopped
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - 8081:8081
    environment:
      - KAFKA_CLUSTERS_0_NAME=zookeeper:2181
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=host.docker.internal:29092
      - SERVER_PORT=8081
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
  
  ##MICROSERVIZI
  
  it-fse-srv-log-ingestion:
    image: it-fse-ms-runner                      
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-srv-log-ingestion.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 9097
    volumes: 
      - mvn-cache:/root/.m2
    depends_on:
      mongo:
        condition: service_healthy
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 9097:9097
    healthcheck:
      test: "curl --fail --silent localhost:9097/status | grep UP || exit 1"
      interval: 10s
      retries: 20
      start_period: 20s
      timeout: 10s

  it-fse-gtw-fhir-mapping-engine:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-gtw-fhir-mapping-engine.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8022
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8022:8022
    depends_on:
      it-fse-gtw-rules-manager:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8022/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s

  it-fse-gtw-validator:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-gtw-validator.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8012
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8012:8012
    depends_on:
      it-fse-srv-log-ingestion:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8012/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s

  it-fse-gtw-status-manager:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-gtw-status-manager.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8013
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8013:8013
    depends_on:
      it-fse-srv-log-ingestion:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8013/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s

  it-fse-gtw-status-check:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-gtw-status-check.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8017
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8017:8017
    depends_on:
      it-fse-srv-log-ingestion:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8017/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
  
  it-fse-gtw-dispatcher:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-gtw-dispatcher.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8010
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8010:8010
    depends_on:
      it-fse-srv-log-ingestion:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8010/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s
  
  it-fse-gtw-rules-manager:
    image: it-fse-ms-runner
    build:
      context: ./../it-fse-ms-runner/
    environment:
      URL: ${REPO_BASE_URL}/it-fse-gtw-rules-manager.git
      BRANCH: ${CURRENT_BRANCH}
      PORT: 8011
    volumes: 
      - mvn-cache:/root/.m2
    network_mode: "bridge"
    extra_hosts:       
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    ports:
      - 8011:8011
    depends_on:
      it-fse-srv-log-ingestion:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8011/status | grep UP || exit 1"
      interval: 40s
      retries: 20
      start_period: 20s
      timeout: 10s

volumes:
  mvn-cache: